#!/bin/sh

if [ "$1" == "" ]; then
        echo "Must provide OpenVPN instance to move: client1, client2, server1 or server2"
        exit 0
fi

instance=$1
type=${instance:0:6}
ovpn_vars="vpn_crt_${instance}_ca vpn_crt_${instance}_crt vpn_crt_${instance}_key vpn_crt_${instance}_dh vpn_crt_${instance}_crl vpn_crt_${instance}_static \
        vpn_crt_${instance}_client_crt vpn_crt_${instance}_client_key vpn_crt_${instance}_ca_key"
ovpn_files="ca.crt $type.crt $type.key dh.pem crl.pem static.key \
        client.crt client.key ca.key"
ovpn_jffs="/jffs/openvpn/${instance}/"
OLDIFS=IFS; IFS=" ";

mkdir -p "$ovpn_jffs"
err=0
let count=1
for VARNAME in $ovpn_vars;
do
    if [ $count -eq 7 ] && [ "$type" == "client" ]; then break; fi
    FILENAME=$(echo $ovpn_files | cut -d " " -f$count)
    FILEPATH=${ovpn_jffs}$FILENAME
    printf "%-32s" "Processing $VARNAME"
    DATA=$(nvram get $VARNAME)
    lDATA=$(echo ${#DATA})
    if [ $lDATA -gt 0 ]; then
		if [ "${DATA:0:5}" == "-----" ] && [ $lDATA -lt 5000 ]; then
		        echo "$DATA" | tr '>' '\n' > $FILEPATH
			nvram set $VARNAME="$FILEPATH"
			echo -e "\tDone"
		else
			echo -e "\tInvalid cert or existing cert found"
			err=1
		fi
    else
		echo -e "\tEmpty"
    fi
    let count=count+1
done

IFS=OLDIFS;
if [ $err -eq 0 ]; then
	nvram commit
	echo "Please reboot via web gui"
else
	echo "Errors found!"
fi
exit 0
